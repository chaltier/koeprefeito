name: 🚀 CD Pipeline

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["🔄 CI Pipeline"]
    branches: [main]
    types: [completed]

env:
  SKIP_ENV_VALIDATION: 1

jobs:
  # Job 1: Deploy to Staging
  deploy-staging:
    name: 🧪 Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    environment:
      name: staging
      url: https://staging-koeprefeito.vercel.app

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build
        run: pnpm build
        env:
          NODE_ENV: production
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_STAGING }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL_STAGING }}
          DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: 🚀 Deploy to Vercel Staging
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prebuilt'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: staging-koeprefeito.vercel.app

  # Job 2: Run E2E Tests on Staging
  e2e-staging:
    name: 🧪 E2E Tests - Staging
    runs-on: ubuntu-latest
    needs: deploy-staging
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run E2E tests
        run: pnpm test:e2e
        env:
          BASE_URL: https://staging-koeprefeito.vercel.app
          CI: true

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-results
          path: test-results/

  # Job 3: Deploy to Production
  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: [deploy-staging, e2e-staging]
    if: success()
    environment:
      name: production
      url: https://koeprefeito.vercel.app

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build
        run: pnpm build
        env:
          NODE_ENV: production
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_PRODUCTION }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL_PRODUCTION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: 🚀 Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prebuilt --prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: koeprefeito.vercel.app

  # Job 4: Post-deployment monitoring
  post-deploy-monitoring:
    name: 📊 Post-deploy Monitoring
    runs-on: ubuntu-latest
    needs: deploy-production
    if: success()

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔍 Health check
        run: |
          echo "🔍 Fazendo health check da aplicação..."
          curl -f https://koeprefeito.vercel.app/api/health || exit 1
          echo "✅ Health check passou!"

      - name: ⚡ Performance check
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://koeprefeito.vercel.app
            https://koeprefeito.vercel.app/auth/signin
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: 📢 Notify success
        run: |
          echo "🎉 Deploy para produção realizado com sucesso!"
          echo "🌐 URL: https://koeprefeito.vercel.app"
          echo "⏰ Timestamp: $(date)"

  # Job 5: Rollback on failure
  rollback:
    name: 🔄 Rollback on Failure
    runs-on: ubuntu-latest
    needs: [deploy-production, post-deploy-monitoring]
    if: failure()

    steps:
      - name: 🔄 Trigger rollback
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--rollback'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: 📢 Notify rollback
        run: |
          echo "⚠️ Rollback executado devido a falha no deploy!"
          echo "🔍 Verifique os logs para identificar o problema."